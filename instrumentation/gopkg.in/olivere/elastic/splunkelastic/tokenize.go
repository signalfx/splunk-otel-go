// Copyright Splunk Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package splunkelastic

import (
	"regexp"
	"sort"
	"strings"
)

// Developer note: both path and operations are generated from the script in
// the internal package. To update, refer to ./internal/main.go.

// Generated from the Elasticsearch Request & Response Specification
// Version: main (hash: 657290b)
// https://github.com/elastic/elasticsearch-specification/blob/60aa3a276e4c617ca7944816a6b4979c2384c675/output/schema/schema.json
var paths = []string{
	"/",
	"/_alias",
	"/_alias/{name}",
	"/_aliases",
	"/_analyze",
	"/_async_search",
	"/_async_search/status/{id}",
	"/_async_search/{id}",
	"/_bulk",
	"/_cache/clear",
	"/_cat",
	"/_cat/aliases",
	"/_cat/aliases/{name}",
	"/_cat/allocation",
	"/_cat/allocation/{node_id}",
	"/_cat/count",
	"/_cat/count/{index}",
	"/_cat/fielddata",
	"/_cat/fielddata/{fields}",
	"/_cat/health",
	"/_cat/indices",
	"/_cat/indices/{index}",
	"/_cat/master",
	"/_cat/ml/anomaly_detectors",
	"/_cat/ml/anomaly_detectors/{job_id}",
	"/_cat/ml/data_frame/analytics",
	"/_cat/ml/data_frame/analytics/{id}",
	"/_cat/ml/datafeeds",
	"/_cat/ml/datafeeds/{datafeed_id}",
	"/_cat/ml/trained_models",
	"/_cat/ml/trained_models/{model_id}",
	"/_cat/nodeattrs",
	"/_cat/nodes",
	"/_cat/pending_tasks",
	"/_cat/plugins",
	"/_cat/recovery",
	"/_cat/recovery/{index}",
	"/_cat/repositories",
	"/_cat/segments",
	"/_cat/segments/{index}",
	"/_cat/shards",
	"/_cat/shards/{index}",
	"/_cat/snapshots",
	"/_cat/snapshots/{repository}",
	"/_cat/tasks",
	"/_cat/templates",
	"/_cat/templates/{name}",
	"/_cat/thread_pool",
	"/_cat/thread_pool/{thread_pool_patterns}",
	"/_cat/transforms",
	"/_cat/transforms/{transform_id}",
	"/_ccr/auto_follow",
	"/_ccr/auto_follow/{name}",
	"/_ccr/auto_follow/{name}/pause",
	"/_ccr/auto_follow/{name}/resume",
	"/_ccr/stats",
	"/_cluster/allocation/explain",
	"/_cluster/health",
	"/_cluster/health/{index}",
	"/_cluster/pending_tasks",
	"/_cluster/reroute",
	"/_cluster/settings",
	"/_cluster/state",
	"/_cluster/state/{metric}",
	"/_cluster/state/{metric}/{index}",
	"/_cluster/stats",
	"/_cluster/stats/nodes/{node_id}",
	"/_cluster/voting_config_exclusions",
	"/_component_template",
	"/_component_template/{name}",
	"/_count",
	"/_dangling",
	"/_dangling/{index_uuid}",
	"/_data_stream",
	"/_data_stream/_migrate/{name}",
	"/_data_stream/_modify",
	"/_data_stream/_promote/{name}",
	"/_data_stream/_stats",
	"/_data_stream/{name}",
	"/_data_stream/{name}/_stats",
	"/_delete_by_query/{task_id}/_rethrottle",
	"/_enrich/_stats",
	"/_enrich/policy",
	"/_enrich/policy/{name}",
	"/_enrich/policy/{name}/_execute",
	"/_eql/search/status/{id}",
	"/_eql/search/{id}",
	"/_features",
	"/_features/_reset",
	"/_field_caps",
	"/_fleet/_fleet_msearch",
	"/_flush",
	"/_forcemerge",
	"/_ilm/migrate_to_data_tiers",
	"/_ilm/move/{index}",
	"/_ilm/policy",
	"/_ilm/policy/{policy}",
	"/_ilm/start",
	"/_ilm/status",
	"/_ilm/stop",
	"/_index_template",
	"/_index_template/_simulate",
	"/_index_template/_simulate/{name}",
	"/_index_template/_simulate_index/{name}",
	"/_index_template/{name}",
	"/_ingest/geoip/stats",
	"/_ingest/pipeline",
	"/_ingest/pipeline/_simulate",
	"/_ingest/pipeline/{id}",
	"/_ingest/pipeline/{id}/_simulate",
	"/_ingest/processor/grok",
	"/_license",
	"/_license/basic_status",
	"/_license/start_basic",
	"/_license/start_trial",
	"/_license/trial_status",
	"/_logstash/pipeline/{id}",
	"/_mapping",
	"/_mapping/field/{fields}",
	"/_mget",
	"/_migration/deprecations",
	"/_migration/system_features",
	"/_ml/_delete_expired_data",
	"/_ml/_delete_expired_data/{job_id}",
	"/_ml/anomaly_detectors",
	"/_ml/anomaly_detectors/_estimate_model_memory",
	"/_ml/anomaly_detectors/_stats",
	"/_ml/anomaly_detectors/{job_id}",
	"/_ml/anomaly_detectors/{job_id}/_close",
	"/_ml/anomaly_detectors/{job_id}/_data",
	"/_ml/anomaly_detectors/{job_id}/_flush",
	"/_ml/anomaly_detectors/{job_id}/_forecast",
	"/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}",
	"/_ml/anomaly_detectors/{job_id}/_open",
	"/_ml/anomaly_detectors/{job_id}/_reset",
	"/_ml/anomaly_detectors/{job_id}/_stats",
	"/_ml/anomaly_detectors/{job_id}/_update",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade",
	"/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade/_stats",
	"/_ml/anomaly_detectors/{job_id}/results/buckets",
	"/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}",
	"/_ml/anomaly_detectors/{job_id}/results/categories/",
	"/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}",
	"/_ml/anomaly_detectors/{job_id}/results/influencers",
	"/_ml/anomaly_detectors/{job_id}/results/overall_buckets",
	"/_ml/anomaly_detectors/{job_id}/results/records",
	"/_ml/calendars",
	"/_ml/calendars/{calendar_id}",
	"/_ml/calendars/{calendar_id}/events",
	"/_ml/calendars/{calendar_id}/events/{event_id}",
	"/_ml/calendars/{calendar_id}/jobs/{job_id}",
	"/_ml/data_frame/_evaluate",
	"/_ml/data_frame/analytics",
	"/_ml/data_frame/analytics/_explain",
	"/_ml/data_frame/analytics/_preview",
	"/_ml/data_frame/analytics/_stats",
	"/_ml/data_frame/analytics/{id}",
	"/_ml/data_frame/analytics/{id}/_explain",
	"/_ml/data_frame/analytics/{id}/_preview",
	"/_ml/data_frame/analytics/{id}/_start",
	"/_ml/data_frame/analytics/{id}/_stats",
	"/_ml/data_frame/analytics/{id}/_stop",
	"/_ml/data_frame/analytics/{id}/_update",
	"/_ml/datafeeds",
	"/_ml/datafeeds/_preview",
	"/_ml/datafeeds/_stats",
	"/_ml/datafeeds/{datafeed_id}",
	"/_ml/datafeeds/{datafeed_id}/_preview",
	"/_ml/datafeeds/{datafeed_id}/_start",
	"/_ml/datafeeds/{datafeed_id}/_stats",
	"/_ml/datafeeds/{datafeed_id}/_stop",
	"/_ml/datafeeds/{datafeed_id}/_update",
	"/_ml/filters",
	"/_ml/filters/{filter_id}",
	"/_ml/filters/{filter_id}/_update",
	"/_ml/info",
	"/_ml/set_upgrade_mode",
	"/_ml/trained_models",
	"/_ml/trained_models/_stats",
	"/_ml/trained_models/{model_id}",
	"/_ml/trained_models/{model_id}/_stats",
	"/_ml/trained_models/{model_id}/definition/{part}",
	"/_ml/trained_models/{model_id}/deployment/_infer",
	"/_ml/trained_models/{model_id}/deployment/_start",
	"/_ml/trained_models/{model_id}/deployment/_stop",
	"/_ml/trained_models/{model_id}/model_aliases/{model_alias}",
	"/_ml/trained_models/{model_id}/vocabulary",
	"/_msearch",
	"/_msearch/template",
	"/_mtermvectors",
	"/_nodes",
	"/_nodes/hot_threads",
	"/_nodes/reload_secure_settings",
	"/_nodes/stats",
	"/_nodes/stats/{metric}",
	"/_nodes/stats/{metric}/{index_metric}",
	"/_nodes/usage",
	"/_nodes/usage/{metric}",
	"/_nodes/{metric}",
	"/_nodes/{node_id}",
	"/_nodes/{node_id}/_repositories_metering",
	"/_nodes/{node_id}/_repositories_metering/{max_archive_version}",
	"/_nodes/{node_id}/hot_threads",
	"/_nodes/{node_id}/reload_secure_settings",
	"/_nodes/{node_id}/stats",
	"/_nodes/{node_id}/stats/{metric}",
	"/_nodes/{node_id}/stats/{metric}/{index_metric}",
	"/_nodes/{node_id}/usage",
	"/_nodes/{node_id}/usage/{metric}",
	"/_nodes/{node_id}/{metric}",
	"/_pit",
	"/_rank_eval",
	"/_recovery",
	"/_refresh",
	"/_reindex",
	"/_reindex/{task_id}/_rethrottle",
	"/_remote/info",
	"/_render/template",
	"/_render/template/{id}",
	"/_resolve/index/{name}",
	"/_rollup/data/",
	"/_rollup/data/{id}",
	"/_rollup/job/",
	"/_rollup/job/{id}",
	"/_rollup/job/{id}/_start",
	"/_rollup/job/{id}/_stop",
	"/_script_context",
	"/_script_language",
	"/_scripts/painless/_execute",
	"/_scripts/{id}",
	"/_scripts/{id}/{context}",
	"/_search",
	"/_search/scroll",
	"/_search/scroll/{scroll_id}",
	"/_search/template",
	"/_search_shards",
	"/_searchable_snapshots/cache/clear",
	"/_searchable_snapshots/cache/stats",
	"/_searchable_snapshots/stats",
	"/_searchable_snapshots/{node_id}/cache/stats",
	"/_security/_authenticate",
	"/_security/_query/api_key",
	"/_security/api_key",
	"/_security/api_key/grant",
	"/_security/api_key/{ids}/_clear_cache",
	"/_security/enroll/kibana",
	"/_security/enroll/node",
	"/_security/oauth2/token",
	"/_security/privilege",
	"/_security/privilege/",
	"/_security/privilege/_builtin",
	"/_security/privilege/{application}",
	"/_security/privilege/{application}/_clear_cache",
	"/_security/privilege/{application}/{name}",
	"/_security/realm/{realms}/_clear_cache",
	"/_security/role",
	"/_security/role/{name}",
	"/_security/role/{name}/_clear_cache",
	"/_security/role_mapping",
	"/_security/role_mapping/{name}",
	"/_security/saml/authenticate",
	"/_security/saml/complete_logout",
	"/_security/saml/invalidate",
	"/_security/saml/logout",
	"/_security/saml/metadata/{realm_name}",
	"/_security/saml/prepare",
	"/_security/service",
	"/_security/service/{namespace}",
	"/_security/service/{namespace}/{service}",
	"/_security/service/{namespace}/{service}/credential",
	"/_security/service/{namespace}/{service}/credential/token",
	"/_security/service/{namespace}/{service}/credential/token/{name}",
	"/_security/service/{namespace}/{service}/credential/token/{name}/_clear_cache",
	"/_security/user",
	"/_security/user/_has_privileges",
	"/_security/user/_password",
	"/_security/user/_privileges",
	"/_security/user/{username}",
	"/_security/user/{username}/_disable",
	"/_security/user/{username}/_enable",
	"/_security/user/{username}/_password",
	"/_security/user/{user}/_has_privileges",
	"/_segments",
	"/_settings",
	"/_settings/{name}",
	"/_shard_stores",
	"/_slm/_execute_retention",
	"/_slm/policy",
	"/_slm/policy/{policy_id}",
	"/_slm/policy/{policy_id}/_execute",
	"/_slm/start",
	"/_slm/stats",
	"/_slm/status",
	"/_slm/stop",
	"/_snapshot",
	"/_snapshot/_status",
	"/_snapshot/{repository}",
	"/_snapshot/{repository}/_analyze",
	"/_snapshot/{repository}/_cleanup",
	"/_snapshot/{repository}/_status",
	"/_snapshot/{repository}/_verify",
	"/_snapshot/{repository}/{snapshot}",
	"/_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}",
	"/_snapshot/{repository}/{snapshot}/_mount",
	"/_snapshot/{repository}/{snapshot}/_restore",
	"/_snapshot/{repository}/{snapshot}/_status",
	"/_sql",
	"/_sql/async/delete/{id}",
	"/_sql/async/status/{id}",
	"/_sql/async/{id}",
	"/_sql/close",
	"/_sql/translate",
	"/_ssl/certificates",
	"/_stats",
	"/_stats/{metric}",
	"/_tasks",
	"/_tasks/_cancel",
	"/_tasks/{task_id}",
	"/_tasks/{task_id}/_cancel",
	"/_template",
	"/_template/{name}",
	"/_text_structure/find_structure",
	"/_transform",
	"/_transform/_preview",
	"/_transform/_upgrade",
	"/_transform/{transform_id}",
	"/_transform/{transform_id}/_preview",
	"/_transform/{transform_id}/_reset",
	"/_transform/{transform_id}/_start",
	"/_transform/{transform_id}/_stats",
	"/_transform/{transform_id}/_stop",
	"/_transform/{transform_id}/_update",
	"/_update_by_query/{task_id}/_rethrottle",
	"/_validate/query",
	"/_watcher/_query/watches",
	"/_watcher/_start",
	"/_watcher/_stop",
	"/_watcher/stats",
	"/_watcher/stats/{metric}",
	"/_watcher/watch/_execute",
	"/_watcher/watch/{id}",
	"/_watcher/watch/{id}/_execute",
	"/_watcher/watch/{watch_id}/_ack",
	"/_watcher/watch/{watch_id}/_ack/{action_id}",
	"/_watcher/watch/{watch_id}/_activate",
	"/_watcher/watch/{watch_id}/_deactivate",
	"/_xpack",
	"/_xpack/usage",
	"/{alias}/_rollover",
	"/{alias}/_rollover/{new_index}",
	"/{index}",
	"/{index}/_alias",
	"/{index}/_alias/{name}",
	"/{index}/_aliases/{name}",
	"/{index}/_analyze",
	"/{index}/_async_search",
	"/{index}/_block/{block}",
	"/{index}/_bulk",
	"/{index}/_cache/clear",
	"/{index}/_ccr/follow",
	"/{index}/_ccr/forget_follower",
	"/{index}/_ccr/info",
	"/{index}/_ccr/pause_follow",
	"/{index}/_ccr/resume_follow",
	"/{index}/_ccr/stats",
	"/{index}/_ccr/unfollow",
	"/{index}/_clone/{target}",
	"/{index}/_close",
	"/{index}/_count",
	"/{index}/_create/{id}",
	"/{index}/_delete_by_query",
	"/{index}/_disk_usage",
	"/{index}/_doc",
	"/{index}/_doc/{id}",
	"/{index}/_eql/search",
	"/{index}/_explain/{id}",
	"/{index}/_field_caps",
	"/{index}/_field_usage_stats",
	"/{index}/_fleet/_fleet_msearch",
	"/{index}/_fleet/_fleet_search",
	"/{index}/_fleet/global_checkpoints",
	"/{index}/_flush",
	"/{index}/_forcemerge",
	"/{index}/_graph/explore",
	"/{index}/_ilm/explain",
	"/{index}/_ilm/remove",
	"/{index}/_ilm/retry",
	"/{index}/_knn_search",
	"/{index}/_mapping",
	"/{index}/_mapping/field/{fields}",
	"/{index}/_mget",
	"/{index}/_migration/deprecations",
	"/{index}/_msearch",
	"/{index}/_msearch/template",
	"/{index}/_mtermvectors",
	"/{index}/_mvt/{field}/{zoom}/{x}/{y}",
	"/{index}/_open",
	"/{index}/_pit",
	"/{index}/_rank_eval",
	"/{index}/_recovery",
	"/{index}/_refresh",
	"/{index}/_reload_search_analyzers",
	"/{index}/_rollup/data",
	"/{index}/_rollup/{rollup_index}",
	"/{index}/_rollup_search",
	"/{index}/_search",
	"/{index}/_search/template",
	"/{index}/_search_shards",
	"/{index}/_searchable_snapshots/cache/clear",
	"/{index}/_searchable_snapshots/stats",
	"/{index}/_segments",
	"/{index}/_settings",
	"/{index}/_settings/{name}",
	"/{index}/_shard_stores",
	"/{index}/_shrink/{target}",
	"/{index}/_source/{id}",
	"/{index}/_split/{target}",
	"/{index}/_stats",
	"/{index}/_stats/{metric}",
	"/{index}/_terms_enum",
	"/{index}/_termvectors",
	"/{index}/_termvectors/{id}",
	"/{index}/_unfreeze",
	"/{index}/_update/{id}",
	"/{index}/_update_by_query",
	"/{index}/_validate/query",
}

type url struct {
	method, path string
}

// Generated from the Elasticsearch Request & Response Specification
// Version: main (hash: 657290b)
// https://github.com/elastic/elasticsearch-specification/blob/60aa3a276e4c617ca7944816a6b4979c2384c675/output/schema/schema.json
var operations = map[url]string{
	{path: "/", method: "GET"}:                                                                              "info",
	{path: "/", method: "HEAD"}:                                                                             "ping",
	{path: "/_alias", method: "GET"}:                                                                        "indices.get_alias",
	{path: "/_alias/{name}", method: "GET"}:                                                                 "indices.get_alias",
	{path: "/_alias/{name}", method: "HEAD"}:                                                                "indices.exists_alias",
	{path: "/_aliases", method: "POST"}:                                                                     "indices.update_aliases",
	{path: "/_analyze", method: "GET"}:                                                                      "indices.analyze",
	{path: "/_analyze", method: "POST"}:                                                                     "indices.analyze",
	{path: "/_async_search", method: "POST"}:                                                                "async_search.submit",
	{path: "/_async_search/status/{id}", method: "GET"}:                                                     "async_search.status",
	{path: "/_async_search/{id}", method: "DELETE"}:                                                         "async_search.delete",
	{path: "/_async_search/{id}", method: "GET"}:                                                            "async_search.get",
	{path: "/_bulk", method: "POST"}:                                                                        "bulk",
	{path: "/_bulk", method: "PUT"}:                                                                         "bulk",
	{path: "/_cache/clear", method: "POST"}:                                                                 "indices.clear_cache",
	{path: "/_cat", method: "GET"}:                                                                          "cat.help",
	{path: "/_cat/aliases", method: "GET"}:                                                                  "cat.aliases",
	{path: "/_cat/aliases/{name}", method: "GET"}:                                                           "cat.aliases",
	{path: "/_cat/allocation", method: "GET"}:                                                               "cat.allocation",
	{path: "/_cat/allocation/{node_id}", method: "GET"}:                                                     "cat.allocation",
	{path: "/_cat/count", method: "GET"}:                                                                    "cat.count",
	{path: "/_cat/count/{index}", method: "GET"}:                                                            "cat.count",
	{path: "/_cat/fielddata", method: "GET"}:                                                                "cat.fielddata",
	{path: "/_cat/fielddata/{fields}", method: "GET"}:                                                       "cat.fielddata",
	{path: "/_cat/health", method: "GET"}:                                                                   "cat.health",
	{path: "/_cat/indices", method: "GET"}:                                                                  "cat.indices",
	{path: "/_cat/indices/{index}", method: "GET"}:                                                          "cat.indices",
	{path: "/_cat/master", method: "GET"}:                                                                   "cat.master",
	{path: "/_cat/ml/anomaly_detectors", method: "GET"}:                                                     "cat.ml_jobs",
	{path: "/_cat/ml/anomaly_detectors/{job_id}", method: "GET"}:                                            "cat.ml_jobs",
	{path: "/_cat/ml/data_frame/analytics", method: "GET"}:                                                  "cat.ml_data_frame_analytics",
	{path: "/_cat/ml/data_frame/analytics/{id}", method: "GET"}:                                             "cat.ml_data_frame_analytics",
	{path: "/_cat/ml/datafeeds", method: "GET"}:                                                             "cat.ml_datafeeds",
	{path: "/_cat/ml/datafeeds/{datafeed_id}", method: "GET"}:                                               "cat.ml_datafeeds",
	{path: "/_cat/ml/trained_models", method: "GET"}:                                                        "cat.ml_trained_models",
	{path: "/_cat/ml/trained_models/{model_id}", method: "GET"}:                                             "cat.ml_trained_models",
	{path: "/_cat/nodeattrs", method: "GET"}:                                                                "cat.nodeattrs",
	{path: "/_cat/nodes", method: "GET"}:                                                                    "cat.nodes",
	{path: "/_cat/pending_tasks", method: "GET"}:                                                            "cat.pending_tasks",
	{path: "/_cat/plugins", method: "GET"}:                                                                  "cat.plugins",
	{path: "/_cat/recovery", method: "GET"}:                                                                 "cat.recovery",
	{path: "/_cat/recovery/{index}", method: "GET"}:                                                         "cat.recovery",
	{path: "/_cat/repositories", method: "GET"}:                                                             "cat.repositories",
	{path: "/_cat/segments", method: "GET"}:                                                                 "cat.segments",
	{path: "/_cat/segments/{index}", method: "GET"}:                                                         "cat.segments",
	{path: "/_cat/shards", method: "GET"}:                                                                   "cat.shards",
	{path: "/_cat/shards/{index}", method: "GET"}:                                                           "cat.shards",
	{path: "/_cat/snapshots", method: "GET"}:                                                                "cat.snapshots",
	{path: "/_cat/snapshots/{repository}", method: "GET"}:                                                   "cat.snapshots",
	{path: "/_cat/tasks", method: "GET"}:                                                                    "cat.tasks",
	{path: "/_cat/templates", method: "GET"}:                                                                "cat.templates",
	{path: "/_cat/templates/{name}", method: "GET"}:                                                         "cat.templates",
	{path: "/_cat/thread_pool", method: "GET"}:                                                              "cat.thread_pool",
	{path: "/_cat/thread_pool/{thread_pool_patterns}", method: "GET"}:                                       "cat.thread_pool",
	{path: "/_cat/transforms", method: "GET"}:                                                               "cat.transforms",
	{path: "/_cat/transforms/{transform_id}", method: "GET"}:                                                "cat.transforms",
	{path: "/_ccr/auto_follow", method: "GET"}:                                                              "ccr.get_auto_follow_pattern",
	{path: "/_ccr/auto_follow/{name}", method: "DELETE"}:                                                    "ccr.delete_auto_follow_pattern",
	{path: "/_ccr/auto_follow/{name}", method: "GET"}:                                                       "ccr.get_auto_follow_pattern",
	{path: "/_ccr/auto_follow/{name}", method: "PUT"}:                                                       "ccr.put_auto_follow_pattern",
	{path: "/_ccr/auto_follow/{name}/pause", method: "POST"}:                                                "ccr.pause_auto_follow_pattern",
	{path: "/_ccr/auto_follow/{name}/resume", method: "POST"}:                                               "ccr.resume_auto_follow_pattern",
	{path: "/_ccr/stats", method: "GET"}:                                                                    "ccr.stats",
	{path: "/_cluster/allocation/explain", method: "GET"}:                                                   "cluster.allocation_explain",
	{path: "/_cluster/allocation/explain", method: "POST"}:                                                  "cluster.allocation_explain",
	{path: "/_cluster/health", method: "GET"}:                                                               "cluster.health",
	{path: "/_cluster/health/{index}", method: "GET"}:                                                       "cluster.health",
	{path: "/_cluster/pending_tasks", method: "GET"}:                                                        "cluster.pending_tasks",
	{path: "/_cluster/reroute", method: "POST"}:                                                             "cluster.reroute",
	{path: "/_cluster/settings", method: "GET"}:                                                             "cluster.get_settings",
	{path: "/_cluster/settings", method: "PUT"}:                                                             "cluster.put_settings",
	{path: "/_cluster/state", method: "GET"}:                                                                "cluster.state",
	{path: "/_cluster/state/{metric}", method: "GET"}:                                                       "cluster.state",
	{path: "/_cluster/state/{metric}/{index}", method: "GET"}:                                               "cluster.state",
	{path: "/_cluster/stats", method: "GET"}:                                                                "cluster.stats",
	{path: "/_cluster/stats/nodes/{node_id}", method: "GET"}:                                                "cluster.stats",
	{path: "/_cluster/voting_config_exclusions", method: "DELETE"}:                                          "cluster.delete_voting_config_exclusions",
	{path: "/_cluster/voting_config_exclusions", method: "POST"}:                                            "cluster.post_voting_config_exclusions",
	{path: "/_component_template", method: "GET"}:                                                           "cluster.get_component_template",
	{path: "/_component_template/{name}", method: "DELETE"}:                                                 "cluster.delete_component_template",
	{path: "/_component_template/{name}", method: "GET"}:                                                    "cluster.get_component_template",
	{path: "/_component_template/{name}", method: "HEAD"}:                                                   "cluster.exists_component_template",
	{path: "/_component_template/{name}", method: "POST"}:                                                   "cluster.put_component_template",
	{path: "/_component_template/{name}", method: "PUT"}:                                                    "cluster.put_component_template",
	{path: "/_count", method: "GET"}:                                                                        "count",
	{path: "/_count", method: "POST"}:                                                                       "count",
	{path: "/_dangling", method: "GET"}:                                                                     "dangling_indices.list_dangling_indices",
	{path: "/_dangling/{index_uuid}", method: "DELETE"}:                                                     "dangling_indices.delete_dangling_index",
	{path: "/_dangling/{index_uuid}", method: "POST"}:                                                       "dangling_indices.import_dangling_index",
	{path: "/_data_stream", method: "GET"}:                                                                  "indices.get_data_stream",
	{path: "/_data_stream/_migrate/{name}", method: "POST"}:                                                 "indices.migrate_to_data_stream",
	{path: "/_data_stream/_modify", method: "POST"}:                                                         "indices.modify_data_stream",
	{path: "/_data_stream/_promote/{name}", method: "POST"}:                                                 "indices.promote_data_stream",
	{path: "/_data_stream/_stats", method: "GET"}:                                                           "indices.data_streams_stats",
	{path: "/_data_stream/{name}", method: "DELETE"}:                                                        "indices.delete_data_stream",
	{path: "/_data_stream/{name}", method: "GET"}:                                                           "indices.get_data_stream",
	{path: "/_data_stream/{name}", method: "PUT"}:                                                           "indices.create_data_stream",
	{path: "/_data_stream/{name}/_stats", method: "GET"}:                                                    "indices.data_streams_stats",
	{path: "/_delete_by_query/{task_id}/_rethrottle", method: "POST"}:                                       "delete_by_query_rethrottle",
	{path: "/_enrich/_stats", method: "GET"}:                                                                "enrich.stats",
	{path: "/_enrich/policy", method: "GET"}:                                                                "enrich.get_policy",
	{path: "/_enrich/policy/{name}", method: "DELETE"}:                                                      "enrich.delete_policy",
	{path: "/_enrich/policy/{name}", method: "GET"}:                                                         "enrich.get_policy",
	{path: "/_enrich/policy/{name}", method: "PUT"}:                                                         "enrich.put_policy",
	{path: "/_enrich/policy/{name}/_execute", method: "PUT"}:                                                "enrich.execute_policy",
	{path: "/_eql/search/status/{id}", method: "GET"}:                                                       "eql.get_status",
	{path: "/_eql/search/{id}", method: "DELETE"}:                                                           "eql.delete",
	{path: "/_eql/search/{id}", method: "GET"}:                                                              "eql.get",
	{path: "/_features", method: "GET"}:                                                                     "features.get_features",
	{path: "/_features/_reset", method: "POST"}:                                                             "features.reset_features",
	{path: "/_field_caps", method: "GET"}:                                                                   "field_caps",
	{path: "/_field_caps", method: "POST"}:                                                                  "field_caps",
	{path: "/_fleet/_fleet_msearch", method: "GET"}:                                                         "fleet.msearch",
	{path: "/_fleet/_fleet_msearch", method: "POST"}:                                                        "fleet.msearch",
	{path: "/_flush", method: "GET"}:                                                                        "indices.flush",
	{path: "/_flush", method: "POST"}:                                                                       "indices.flush",
	{path: "/_forcemerge", method: "POST"}:                                                                  "indices.forcemerge",
	{path: "/_ilm/migrate_to_data_tiers", method: "POST"}:                                                   "ilm.migrate_to_data_tiers",
	{path: "/_ilm/move/{index}", method: "POST"}:                                                            "ilm.move_to_step",
	{path: "/_ilm/policy", method: "GET"}:                                                                   "ilm.get_lifecycle",
	{path: "/_ilm/policy/{policy}", method: "DELETE"}:                                                       "ilm.delete_lifecycle",
	{path: "/_ilm/policy/{policy}", method: "GET"}:                                                          "ilm.get_lifecycle",
	{path: "/_ilm/policy/{policy}", method: "PUT"}:                                                          "ilm.put_lifecycle",
	{path: "/_ilm/start", method: "POST"}:                                                                   "ilm.start",
	{path: "/_ilm/status", method: "GET"}:                                                                   "ilm.get_status",
	{path: "/_ilm/stop", method: "POST"}:                                                                    "ilm.stop",
	{path: "/_index_template", method: "GET"}:                                                               "indices.get_index_template",
	{path: "/_index_template/_simulate", method: "POST"}:                                                    "indices.simulate_template",
	{path: "/_index_template/_simulate/{name}", method: "POST"}:                                             "indices.simulate_template",
	{path: "/_index_template/_simulate_index/{name}", method: "POST"}:                                       "indices.simulate_index_template",
	{path: "/_index_template/{name}", method: "DELETE"}:                                                     "indices.delete_index_template",
	{path: "/_index_template/{name}", method: "GET"}:                                                        "indices.get_index_template",
	{path: "/_index_template/{name}", method: "HEAD"}:                                                       "indices.exists_index_template",
	{path: "/_index_template/{name}", method: "POST"}:                                                       "indices.put_index_template",
	{path: "/_index_template/{name}", method: "PUT"}:                                                        "indices.put_index_template",
	{path: "/_ingest/geoip/stats", method: "GET"}:                                                           "ingest.geo_ip_stats",
	{path: "/_ingest/pipeline", method: "GET"}:                                                              "ingest.get_pipeline",
	{path: "/_ingest/pipeline/_simulate", method: "GET"}:                                                    "ingest.simulate",
	{path: "/_ingest/pipeline/_simulate", method: "POST"}:                                                   "ingest.simulate",
	{path: "/_ingest/pipeline/{id}", method: "DELETE"}:                                                      "ingest.delete_pipeline",
	{path: "/_ingest/pipeline/{id}", method: "GET"}:                                                         "ingest.get_pipeline",
	{path: "/_ingest/pipeline/{id}", method: "PUT"}:                                                         "ingest.put_pipeline",
	{path: "/_ingest/pipeline/{id}/_simulate", method: "GET"}:                                               "ingest.simulate",
	{path: "/_ingest/pipeline/{id}/_simulate", method: "POST"}:                                              "ingest.simulate",
	{path: "/_ingest/processor/grok", method: "GET"}:                                                        "ingest.processor_grok",
	{path: "/_license", method: "DELETE"}:                                                                   "license.delete",
	{path: "/_license", method: "GET"}:                                                                      "license.get",
	{path: "/_license", method: "POST"}:                                                                     "license.post",
	{path: "/_license", method: "PUT"}:                                                                      "license.post",
	{path: "/_license/basic_status", method: "GET"}:                                                         "license.get_basic_status",
	{path: "/_license/start_basic", method: "POST"}:                                                         "license.post_start_basic",
	{path: "/_license/start_trial", method: "POST"}:                                                         "license.post_start_trial",
	{path: "/_license/trial_status", method: "GET"}:                                                         "license.get_trial_status",
	{path: "/_logstash/pipeline/{id}", method: "DELETE"}:                                                    "logstash.delete_pipeline",
	{path: "/_logstash/pipeline/{id}", method: "GET"}:                                                       "logstash.get_pipeline",
	{path: "/_logstash/pipeline/{id}", method: "PUT"}:                                                       "logstash.put_pipeline",
	{path: "/_mapping", method: "GET"}:                                                                      "indices.get_mapping",
	{path: "/_mapping/field/{fields}", method: "GET"}:                                                       "indices.get_field_mapping",
	{path: "/_mget", method: "GET"}:                                                                         "mget",
	{path: "/_mget", method: "POST"}:                                                                        "mget",
	{path: "/_migration/deprecations", method: "GET"}:                                                       "migration.deprecations",
	{path: "/_migration/system_features", method: "GET"}:                                                    "migration.get_feature_upgrade_status",
	{path: "/_migration/system_features", method: "POST"}:                                                   "migration.post_feature_upgrade",
	{path: "/_ml/_delete_expired_data", method: "DELETE"}:                                                   "ml.delete_expired_data",
	{path: "/_ml/_delete_expired_data/{job_id}", method: "DELETE"}:                                          "ml.delete_expired_data",
	{path: "/_ml/anomaly_detectors", method: "GET"}:                                                         "ml.get_jobs",
	{path: "/_ml/anomaly_detectors/_estimate_model_memory", method: "POST"}:                                 "ml.estimate_model_memory",
	{path: "/_ml/anomaly_detectors/_stats", method: "GET"}:                                                  "ml.get_job_stats",
	{path: "/_ml/anomaly_detectors/{job_id}", method: "DELETE"}:                                             "ml.delete_job",
	{path: "/_ml/anomaly_detectors/{job_id}", method: "GET"}:                                                "ml.get_jobs",
	{path: "/_ml/anomaly_detectors/{job_id}", method: "PUT"}:                                                "ml.put_job",
	{path: "/_ml/anomaly_detectors/{job_id}/_close", method: "POST"}:                                        "ml.close_job",
	{path: "/_ml/anomaly_detectors/{job_id}/_data", method: "POST"}:                                         "ml.post_data",
	{path: "/_ml/anomaly_detectors/{job_id}/_flush", method: "POST"}:                                        "ml.flush_job",
	{path: "/_ml/anomaly_detectors/{job_id}/_forecast", method: "DELETE"}:                                   "ml.delete_forecast",
	{path: "/_ml/anomaly_detectors/{job_id}/_forecast", method: "POST"}:                                     "ml.forecast",
	{path: "/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}", method: "DELETE"}:                     "ml.delete_forecast",
	{path: "/_ml/anomaly_detectors/{job_id}/_open", method: "POST"}:                                         "ml.open_job",
	{path: "/_ml/anomaly_detectors/{job_id}/_reset", method: "POST"}:                                        "ml.reset_job",
	{path: "/_ml/anomaly_detectors/{job_id}/_stats", method: "GET"}:                                         "ml.get_job_stats",
	{path: "/_ml/anomaly_detectors/{job_id}/_update", method: "POST"}:                                       "ml.update_job",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots", method: "GET"}:                                "ml.get_model_snapshots",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots", method: "POST"}:                               "ml.get_model_snapshots",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", method: "DELETE"}:               "ml.delete_model_snapshot",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", method: "GET"}:                  "ml.get_model_snapshots",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", method: "POST"}:                 "ml.get_model_snapshots",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert", method: "POST"}:         "ml.revert_model_snapshot",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update", method: "POST"}:         "ml.update_model_snapshot",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade", method: "POST"}:        "ml.upgrade_job_snapshot",
	{path: "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade/_stats", method: "GET"}:  "ml.get_model_snapshot_upgrade_stats",
	{path: "/_ml/anomaly_detectors/{job_id}/results/buckets", method: "GET"}:                                "ml.get_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/buckets", method: "POST"}:                               "ml.get_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}", method: "GET"}:                    "ml.get_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}", method: "POST"}:                   "ml.get_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/categories/", method: "GET"}:                            "ml.get_categories",
	{path: "/_ml/anomaly_detectors/{job_id}/results/categories/", method: "POST"}:                           "ml.get_categories",
	{path: "/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}", method: "GET"}:               "ml.get_categories",
	{path: "/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}", method: "POST"}:              "ml.get_categories",
	{path: "/_ml/anomaly_detectors/{job_id}/results/influencers", method: "GET"}:                            "ml.get_influencers",
	{path: "/_ml/anomaly_detectors/{job_id}/results/influencers", method: "POST"}:                           "ml.get_influencers",
	{path: "/_ml/anomaly_detectors/{job_id}/results/overall_buckets", method: "GET"}:                        "ml.get_overall_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/overall_buckets", method: "POST"}:                       "ml.get_overall_buckets",
	{path: "/_ml/anomaly_detectors/{job_id}/results/records", method: "GET"}:                                "ml.get_records",
	{path: "/_ml/anomaly_detectors/{job_id}/results/records", method: "POST"}:                               "ml.get_records",
	{path: "/_ml/calendars", method: "GET"}:                                                                 "ml.get_calendars",
	{path: "/_ml/calendars", method: "POST"}:                                                                "ml.get_calendars",
	{path: "/_ml/calendars/{calendar_id}", method: "DELETE"}:                                                "ml.delete_calendar",
	{path: "/_ml/calendars/{calendar_id}", method: "GET"}:                                                   "ml.get_calendars",
	{path: "/_ml/calendars/{calendar_id}", method: "POST"}:                                                  "ml.get_calendars",
	{path: "/_ml/calendars/{calendar_id}", method: "PUT"}:                                                   "ml.put_calendar",
	{path: "/_ml/calendars/{calendar_id}/events", method: "GET"}:                                            "ml.get_calendar_events",
	{path: "/_ml/calendars/{calendar_id}/events", method: "POST"}:                                           "ml.post_calendar_events",
	{path: "/_ml/calendars/{calendar_id}/events/{event_id}", method: "DELETE"}:                              "ml.delete_calendar_event",
	{path: "/_ml/calendars/{calendar_id}/jobs/{job_id}", method: "DELETE"}:                                  "ml.delete_calendar_job",
	{path: "/_ml/calendars/{calendar_id}/jobs/{job_id}", method: "PUT"}:                                     "ml.put_calendar_job",
	{path: "/_ml/data_frame/_evaluate", method: "POST"}:                                                     "ml.evaluate_data_frame",
	{path: "/_ml/data_frame/analytics", method: "GET"}:                                                      "ml.get_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/_explain", method: "GET"}:                                             "ml.explain_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/_explain", method: "POST"}:                                            "ml.explain_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/_preview", method: "GET"}:                                             "ml.preview_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/_preview", method: "POST"}:                                            "ml.preview_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/_stats", method: "GET"}:                                               "ml.get_data_frame_analytics_stats",
	{path: "/_ml/data_frame/analytics/{id}", method: "DELETE"}:                                              "ml.delete_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}", method: "GET"}:                                                 "ml.get_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}", method: "PUT"}:                                                 "ml.put_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_explain", method: "GET"}:                                        "ml.explain_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_explain", method: "POST"}:                                       "ml.explain_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_preview", method: "GET"}:                                        "ml.preview_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_preview", method: "POST"}:                                       "ml.preview_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_start", method: "POST"}:                                         "ml.start_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_stats", method: "GET"}:                                          "ml.get_data_frame_analytics_stats",
	{path: "/_ml/data_frame/analytics/{id}/_stop", method: "POST"}:                                          "ml.stop_data_frame_analytics",
	{path: "/_ml/data_frame/analytics/{id}/_update", method: "POST"}:                                        "ml.update_data_frame_analytics",
	{path: "/_ml/datafeeds", method: "GET"}:                                                                 "ml.get_datafeeds",
	{path: "/_ml/datafeeds/_preview", method: "GET"}:                                                        "ml.preview_datafeed",
	{path: "/_ml/datafeeds/_preview", method: "POST"}:                                                       "ml.preview_datafeed",
	{path: "/_ml/datafeeds/_stats", method: "GET"}:                                                          "ml.get_datafeed_stats",
	{path: "/_ml/datafeeds/{datafeed_id}", method: "DELETE"}:                                                "ml.delete_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}", method: "GET"}:                                                   "ml.get_datafeeds",
	{path: "/_ml/datafeeds/{datafeed_id}", method: "PUT"}:                                                   "ml.put_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}/_preview", method: "GET"}:                                          "ml.preview_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}/_preview", method: "POST"}:                                         "ml.preview_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}/_start", method: "POST"}:                                           "ml.start_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}/_stats", method: "GET"}:                                            "ml.get_datafeed_stats",
	{path: "/_ml/datafeeds/{datafeed_id}/_stop", method: "POST"}:                                            "ml.stop_datafeed",
	{path: "/_ml/datafeeds/{datafeed_id}/_update", method: "POST"}:                                          "ml.update_datafeed",
	{path: "/_ml/filters", method: "GET"}:                                                                   "ml.get_filters",
	{path: "/_ml/filters/{filter_id}", method: "DELETE"}:                                                    "ml.delete_filter",
	{path: "/_ml/filters/{filter_id}", method: "GET"}:                                                       "ml.get_filters",
	{path: "/_ml/filters/{filter_id}", method: "PUT"}:                                                       "ml.put_filter",
	{path: "/_ml/filters/{filter_id}/_update", method: "POST"}:                                              "ml.update_filter",
	{path: "/_ml/info", method: "GET"}:                                                                      "ml.info",
	{path: "/_ml/set_upgrade_mode", method: "POST"}:                                                         "ml.set_upgrade_mode",
	{path: "/_ml/trained_models", method: "GET"}:                                                            "ml.get_trained_models",
	{path: "/_ml/trained_models/_stats", method: "GET"}:                                                     "ml.get_trained_models_stats",
	{path: "/_ml/trained_models/{model_id}", method: "DELETE"}:                                              "ml.delete_trained_model",
	{path: "/_ml/trained_models/{model_id}", method: "GET"}:                                                 "ml.get_trained_models",
	{path: "/_ml/trained_models/{model_id}", method: "PUT"}:                                                 "ml.put_trained_model",
	{path: "/_ml/trained_models/{model_id}/_stats", method: "GET"}:                                          "ml.get_trained_models_stats",
	{path: "/_ml/trained_models/{model_id}/definition/{part}", method: "PUT"}:                               "ml.put_trained_model_definition_part",
	{path: "/_ml/trained_models/{model_id}/deployment/_infer", method: "POST"}:                              "ml.infer_trained_model_deployment",
	{path: "/_ml/trained_models/{model_id}/deployment/_start", method: "POST"}:                              "ml.start_trained_model_deployment",
	{path: "/_ml/trained_models/{model_id}/deployment/_stop", method: "POST"}:                               "ml.stop_trained_model_deployment",
	{path: "/_ml/trained_models/{model_id}/model_aliases/{model_alias}", method: "DELETE"}:                  "ml.delete_trained_model_alias",
	{path: "/_ml/trained_models/{model_id}/model_aliases/{model_alias}", method: "PUT"}:                     "ml.put_trained_model_alias",
	{path: "/_ml/trained_models/{model_id}/vocabulary", method: "PUT"}:                                      "ml.put_trained_model_vocabulary",
	{path: "/_msearch", method: "GET"}:                                                                      "msearch",
	{path: "/_msearch", method: "POST"}:                                                                     "msearch",
	{path: "/_msearch/template", method: "GET"}:                                                             "msearch_template",
	{path: "/_msearch/template", method: "POST"}:                                                            "msearch_template",
	{path: "/_mtermvectors", method: "GET"}:                                                                 "mtermvectors",
	{path: "/_mtermvectors", method: "POST"}:                                                                "mtermvectors",
	{path: "/_nodes", method: "GET"}:                                                                        "nodes.info",
	{path: "/_nodes/hot_threads", method: "GET"}:                                                            "nodes.hot_threads",
	{path: "/_nodes/reload_secure_settings", method: "POST"}:                                                "nodes.reload_secure_settings",
	{path: "/_nodes/stats", method: "GET"}:                                                                  "nodes.stats",
	{path: "/_nodes/stats/{metric}", method: "GET"}:                                                         "nodes.stats",
	{path: "/_nodes/stats/{metric}/{index_metric}", method: "GET"}:                                          "nodes.stats",
	{path: "/_nodes/usage", method: "GET"}:                                                                  "nodes.usage",
	{path: "/_nodes/usage/{metric}", method: "GET"}:                                                         "nodes.usage",
	{path: "/_nodes/{metric}", method: "GET"}:                                                               "nodes.info",
	{path: "/_nodes/{node_id}", method: "GET"}:                                                              "nodes.info",
	{path: "/_nodes/{node_id}/_repositories_metering", method: "GET"}:                                       "nodes.get_repositories_metering_info",
	{path: "/_nodes/{node_id}/_repositories_metering/{max_archive_version}", method: "DELETE"}:              "nodes.clear_repositories_metering_archive",
	{path: "/_nodes/{node_id}/hot_threads", method: "GET"}:                                                  "nodes.hot_threads",
	{path: "/_nodes/{node_id}/reload_secure_settings", method: "POST"}:                                      "nodes.reload_secure_settings",
	{path: "/_nodes/{node_id}/stats", method: "GET"}:                                                        "nodes.stats",
	{path: "/_nodes/{node_id}/stats/{metric}", method: "GET"}:                                               "nodes.stats",
	{path: "/_nodes/{node_id}/stats/{metric}/{index_metric}", method: "GET"}:                                "nodes.stats",
	{path: "/_nodes/{node_id}/usage", method: "GET"}:                                                        "nodes.usage",
	{path: "/_nodes/{node_id}/usage/{metric}", method: "GET"}:                                               "nodes.usage",
	{path: "/_nodes/{node_id}/{metric}", method: "GET"}:                                                     "nodes.info",
	{path: "/_pit", method: "DELETE"}:                                                                       "close_point_in_time",
	{path: "/_rank_eval", method: "GET"}:                                                                    "rank_eval",
	{path: "/_rank_eval", method: "POST"}:                                                                   "rank_eval",
	{path: "/_recovery", method: "GET"}:                                                                     "indices.recovery",
	{path: "/_refresh", method: "GET"}:                                                                      "indices.refresh",
	{path: "/_refresh", method: "POST"}:                                                                     "indices.refresh",
	{path: "/_reindex", method: "POST"}:                                                                     "reindex",
	{path: "/_reindex/{task_id}/_rethrottle", method: "POST"}:                                               "reindex_rethrottle",
	{path: "/_remote/info", method: "GET"}:                                                                  "cluster.remote_info",
	{path: "/_render/template", method: "GET"}:                                                              "render_search_template",
	{path: "/_render/template", method: "POST"}:                                                             "render_search_template",
	{path: "/_render/template/{id}", method: "GET"}:                                                         "render_search_template",
	{path: "/_render/template/{id}", method: "POST"}:                                                        "render_search_template",
	{path: "/_resolve/index/{name}", method: "GET"}:                                                         "indices.resolve_index",
	{path: "/_rollup/data/", method: "GET"}:                                                                 "rollup.get_rollup_caps",
	{path: "/_rollup/data/{id}", method: "GET"}:                                                             "rollup.get_rollup_caps",
	{path: "/_rollup/job/", method: "GET"}:                                                                  "rollup.get_jobs",
	{path: "/_rollup/job/{id}", method: "DELETE"}:                                                           "rollup.delete_job",
	{path: "/_rollup/job/{id}", method: "GET"}:                                                              "rollup.get_jobs",
	{path: "/_rollup/job/{id}", method: "PUT"}:                                                              "rollup.put_job",
	{path: "/_rollup/job/{id}/_start", method: "POST"}:                                                      "rollup.start_job",
	{path: "/_rollup/job/{id}/_stop", method: "POST"}:                                                       "rollup.stop_job",
	{path: "/_script_context", method: "GET"}:                                                               "get_script_context",
	{path: "/_script_language", method: "GET"}:                                                              "get_script_languages",
	{path: "/_scripts/painless/_execute", method: "GET"}:                                                    "scripts_painless_execute",
	{path: "/_scripts/painless/_execute", method: "POST"}:                                                   "scripts_painless_execute",
	{path: "/_scripts/{id}", method: "DELETE"}:                                                              "delete_script",
	{path: "/_scripts/{id}", method: "GET"}:                                                                 "get_script",
	{path: "/_scripts/{id}", method: "POST"}:                                                                "put_script",
	{path: "/_scripts/{id}", method: "PUT"}:                                                                 "put_script",
	{path: "/_scripts/{id}/{context}", method: "POST"}:                                                      "put_script",
	{path: "/_scripts/{id}/{context}", method: "PUT"}:                                                       "put_script",
	{path: "/_search", method: "GET"}:                                                                       "search",
	{path: "/_search", method: "POST"}:                                                                      "search",
	{path: "/_search/scroll", method: "DELETE"}:                                                             "clear_scroll",
	{path: "/_search/scroll", method: "GET"}:                                                                "scroll",
	{path: "/_search/scroll", method: "POST"}:                                                               "scroll",
	{path: "/_search/scroll/{scroll_id}", method: "DELETE"}:                                                 "clear_scroll",
	{path: "/_search/scroll/{scroll_id}", method: "GET"}:                                                    "scroll",
	{path: "/_search/scroll/{scroll_id}", method: "POST"}:                                                   "scroll",
	{path: "/_search/template", method: "GET"}:                                                              "search_template",
	{path: "/_search/template", method: "POST"}:                                                             "search_template",
	{path: "/_search_shards", method: "GET"}:                                                                "search_shards",
	{path: "/_search_shards", method: "POST"}:                                                               "search_shards",
	{path: "/_searchable_snapshots/cache/clear", method: "POST"}:                                            "searchable_snapshots.clear_cache",
	{path: "/_searchable_snapshots/cache/stats", method: "GET"}:                                             "searchable_snapshots.cache_stats",
	{path: "/_searchable_snapshots/stats", method: "GET"}:                                                   "searchable_snapshots.stats",
	{path: "/_searchable_snapshots/{node_id}/cache/stats", method: "GET"}:                                   "searchable_snapshots.cache_stats",
	{path: "/_security/_authenticate", method: "GET"}:                                                       "security.authenticate",
	{path: "/_security/_query/api_key", method: "GET"}:                                                      "security.query_api_keys",
	{path: "/_security/_query/api_key", method: "POST"}:                                                     "security.query_api_keys",
	{path: "/_security/api_key", method: "DELETE"}:                                                          "security.invalidate_api_key",
	{path: "/_security/api_key", method: "GET"}:                                                             "security.get_api_key",
	{path: "/_security/api_key", method: "POST"}:                                                            "security.create_api_key",
	{path: "/_security/api_key", method: "PUT"}:                                                             "security.create_api_key",
	{path: "/_security/api_key/grant", method: "POST"}:                                                      "security.grant_api_key",
	{path: "/_security/api_key/{ids}/_clear_cache", method: "POST"}:                                         "security.clear_api_key_cache",
	{path: "/_security/enroll/kibana", method: "GET"}:                                                       "security.enroll_kibana",
	{path: "/_security/enroll/node", method: "GET"}:                                                         "security.enroll_node",
	{path: "/_security/oauth2/token", method: "DELETE"}:                                                     "security.invalidate_token",
	{path: "/_security/oauth2/token", method: "POST"}:                                                       "security.get_token",
	{path: "/_security/privilege", method: "GET"}:                                                           "security.get_privileges",
	{path: "/_security/privilege/", method: "POST"}:                                                         "security.put_privileges",
	{path: "/_security/privilege/", method: "PUT"}:                                                          "security.put_privileges",
	{path: "/_security/privilege/_builtin", method: "GET"}:                                                  "security.get_builtin_privileges",
	{path: "/_security/privilege/{application}", method: "GET"}:                                             "security.get_privileges",
	{path: "/_security/privilege/{application}/_clear_cache", method: "POST"}:                               "security.clear_cached_privileges",
	{path: "/_security/privilege/{application}/{name}", method: "DELETE"}:                                   "security.delete_privileges",
	{path: "/_security/privilege/{application}/{name}", method: "GET"}:                                      "security.get_privileges",
	{path: "/_security/realm/{realms}/_clear_cache", method: "POST"}:                                        "security.clear_cached_realms",
	{path: "/_security/role", method: "GET"}:                                                                "security.get_role",
	{path: "/_security/role/{name}", method: "DELETE"}:                                                      "security.delete_role",
	{path: "/_security/role/{name}", method: "GET"}:                                                         "security.get_role",
	{path: "/_security/role/{name}", method: "POST"}:                                                        "security.put_role",
	{path: "/_security/role/{name}", method: "PUT"}:                                                         "security.put_role",
	{path: "/_security/role/{name}/_clear_cache", method: "POST"}:                                           "security.clear_cached_roles",
	{path: "/_security/role_mapping", method: "GET"}:                                                        "security.get_role_mapping",
	{path: "/_security/role_mapping/{name}", method: "DELETE"}:                                              "security.delete_role_mapping",
	{path: "/_security/role_mapping/{name}", method: "GET"}:                                                 "security.get_role_mapping",
	{path: "/_security/role_mapping/{name}", method: "POST"}:                                                "security.put_role_mapping",
	{path: "/_security/role_mapping/{name}", method: "PUT"}:                                                 "security.put_role_mapping",
	{path: "/_security/saml/authenticate", method: "POST"}:                                                  "security.saml_authenticate",
	{path: "/_security/saml/complete_logout", method: "POST"}:                                               "security.saml_complete_logout",
	{path: "/_security/saml/invalidate", method: "POST"}:                                                    "security.saml_invalidate",
	{path: "/_security/saml/logout", method: "POST"}:                                                        "security.saml_logout",
	{path: "/_security/saml/metadata/{realm_name}", method: "GET"}:                                          "security.saml_service_provider_metadata",
	{path: "/_security/saml/prepare", method: "POST"}:                                                       "security.saml_prepare_authentication",
	{path: "/_security/service", method: "GET"}:                                                             "security.get_service_accounts",
	{path: "/_security/service/{namespace}", method: "GET"}:                                                 "security.get_service_accounts",
	{path: "/_security/service/{namespace}/{service}", method: "GET"}:                                       "security.get_service_accounts",
	{path: "/_security/service/{namespace}/{service}/credential", method: "GET"}:                            "security.get_service_credentials",
	{path: "/_security/service/{namespace}/{service}/credential/token", method: "POST"}:                     "security.create_service_token",
	{path: "/_security/service/{namespace}/{service}/credential/token/{name}", method: "DELETE"}:            "security.delete_service_token",
	{path: "/_security/service/{namespace}/{service}/credential/token/{name}", method: "POST"}:              "security.create_service_token",
	{path: "/_security/service/{namespace}/{service}/credential/token/{name}", method: "PUT"}:               "security.create_service_token",
	{path: "/_security/service/{namespace}/{service}/credential/token/{name}/_clear_cache", method: "POST"}: "security.clear_cached_service_tokens",
	{path: "/_security/user", method: "GET"}:                                                                "security.get_user",
	{path: "/_security/user/_has_privileges", method: "GET"}:                                                "security.has_privileges",
	{path: "/_security/user/_has_privileges", method: "POST"}:                                               "security.has_privileges",
	{path: "/_security/user/_password", method: "POST"}:                                                     "security.change_password",
	{path: "/_security/user/_password", method: "PUT"}:                                                      "security.change_password",
	{path: "/_security/user/_privileges", method: "GET"}:                                                    "security.get_user_privileges",
	{path: "/_security/user/{username}", method: "DELETE"}:                                                  "security.delete_user",
	{path: "/_security/user/{username}", method: "GET"}:                                                     "security.get_user",
	{path: "/_security/user/{username}", method: "POST"}:                                                    "security.put_user",
	{path: "/_security/user/{username}", method: "PUT"}:                                                     "security.put_user",
	{path: "/_security/user/{username}/_disable", method: "POST"}:                                           "security.disable_user",
	{path: "/_security/user/{username}/_disable", method: "PUT"}:                                            "security.disable_user",
	{path: "/_security/user/{username}/_enable", method: "POST"}:                                            "security.enable_user",
	{path: "/_security/user/{username}/_enable", method: "PUT"}:                                             "security.enable_user",
	{path: "/_security/user/{username}/_password", method: "POST"}:                                          "security.change_password",
	{path: "/_security/user/{username}/_password", method: "PUT"}:                                           "security.change_password",
	{path: "/_security/user/{user}/_has_privileges", method: "GET"}:                                         "security.has_privileges",
	{path: "/_security/user/{user}/_has_privileges", method: "POST"}:                                        "security.has_privileges",
	{path: "/_segments", method: "GET"}:                                                                     "indices.segments",
	{path: "/_settings", method: "GET"}:                                                                     "indices.get_settings",
	{path: "/_settings", method: "PUT"}:                                                                     "indices.put_settings",
	{path: "/_settings/{name}", method: "GET"}:                                                              "indices.get_settings",
	{path: "/_shard_stores", method: "GET"}:                                                                 "indices.shard_stores",
	{path: "/_slm/_execute_retention", method: "POST"}:                                                      "slm.execute_retention",
	{path: "/_slm/policy", method: "GET"}:                                                                   "slm.get_lifecycle",
	{path: "/_slm/policy/{policy_id}", method: "DELETE"}:                                                    "slm.delete_lifecycle",
	{path: "/_slm/policy/{policy_id}", method: "GET"}:                                                       "slm.get_lifecycle",
	{path: "/_slm/policy/{policy_id}", method: "PUT"}:                                                       "slm.put_lifecycle",
	{path: "/_slm/policy/{policy_id}/_execute", method: "PUT"}:                                              "slm.execute_lifecycle",
	{path: "/_slm/start", method: "POST"}:                                                                   "slm.start",
	{path: "/_slm/stats", method: "GET"}:                                                                    "slm.get_stats",
	{path: "/_slm/status", method: "GET"}:                                                                   "slm.get_status",
	{path: "/_slm/stop", method: "POST"}:                                                                    "slm.stop",
	{path: "/_snapshot", method: "GET"}:                                                                     "snapshot.get_repository",
	{path: "/_snapshot/_status", method: "GET"}:                                                             "snapshot.status",
	{path: "/_snapshot/{repository}", method: "DELETE"}:                                                     "snapshot.delete_repository",
	{path: "/_snapshot/{repository}", method: "GET"}:                                                        "snapshot.get_repository",
	{path: "/_snapshot/{repository}", method: "POST"}:                                                       "snapshot.create_repository",
	{path: "/_snapshot/{repository}", method: "PUT"}:                                                        "snapshot.create_repository",
	{path: "/_snapshot/{repository}/_analyze", method: "POST"}:                                              "snapshot.repository_analyze",
	{path: "/_snapshot/{repository}/_cleanup", method: "POST"}:                                              "snapshot.cleanup_repository",
	{path: "/_snapshot/{repository}/_status", method: "GET"}:                                                "snapshot.status",
	{path: "/_snapshot/{repository}/_verify", method: "POST"}:                                               "snapshot.verify_repository",
	{path: "/_snapshot/{repository}/{snapshot}", method: "DELETE"}:                                          "snapshot.delete",
	{path: "/_snapshot/{repository}/{snapshot}", method: "GET"}:                                             "snapshot.get",
	{path: "/_snapshot/{repository}/{snapshot}", method: "POST"}:                                            "snapshot.create",
	{path: "/_snapshot/{repository}/{snapshot}", method: "PUT"}:                                             "snapshot.create",
	{path: "/_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}", method: "PUT"}:                    "snapshot.clone",
	{path: "/_snapshot/{repository}/{snapshot}/_mount", method: "POST"}:                                     "searchable_snapshots.mount",
	{path: "/_snapshot/{repository}/{snapshot}/_restore", method: "POST"}:                                   "snapshot.restore",
	{path: "/_snapshot/{repository}/{snapshot}/_status", method: "GET"}:                                     "snapshot.status",
	{path: "/_sql", method: "GET"}:                                                                          "sql.query",
	{path: "/_sql", method: "POST"}:                                                                         "sql.query",
	{path: "/_sql/async/delete/{id}", method: "DELETE"}:                                                     "sql.delete_async",
	{path: "/_sql/async/status/{id}", method: "GET"}:                                                        "sql.get_async_status",
	{path: "/_sql/async/{id}", method: "GET"}:                                                               "sql.get_async",
	{path: "/_sql/close", method: "POST"}:                                                                   "sql.clear_cursor",
	{path: "/_sql/translate", method: "GET"}:                                                                "sql.translate",
	{path: "/_sql/translate", method: "POST"}:                                                               "sql.translate",
	{path: "/_ssl/certificates", method: "GET"}:                                                             "ssl.certificates",
	{path: "/_stats", method: "GET"}:                                                                        "indices.stats",
	{path: "/_stats/{metric}", method: "GET"}:                                                               "indices.stats",
	{path: "/_tasks", method: "GET"}:                                                                        "tasks.list",
	{path: "/_tasks/_cancel", method: "POST"}:                                                               "tasks.cancel",
	{path: "/_tasks/{task_id}", method: "GET"}:                                                              "tasks.get",
	{path: "/_tasks/{task_id}/_cancel", method: "POST"}:                                                     "tasks.cancel",
	{path: "/_template", method: "GET"}:                                                                     "indices.get_template",
	{path: "/_template/{name}", method: "DELETE"}:                                                           "indices.delete_template",
	{path: "/_template/{name}", method: "GET"}:                                                              "indices.get_template",
	{path: "/_template/{name}", method: "HEAD"}:                                                             "indices.exists_template",
	{path: "/_template/{name}", method: "POST"}:                                                             "indices.put_template",
	{path: "/_template/{name}", method: "PUT"}:                                                              "indices.put_template",
	{path: "/_text_structure/find_structure", method: "POST"}:                                               "text_structure.find_structure",
	{path: "/_transform", method: "GET"}:                                                                    "transform.get_transform",
	{path: "/_transform/_preview", method: "GET"}:                                                           "transform.preview_transform",
	{path: "/_transform/_preview", method: "POST"}:                                                          "transform.preview_transform",
	{path: "/_transform/_upgrade", method: "POST"}:                                                          "transform.upgrade_transforms",
	{path: "/_transform/{transform_id}", method: "DELETE"}:                                                  "transform.delete_transform",
	{path: "/_transform/{transform_id}", method: "GET"}:                                                     "transform.get_transform",
	{path: "/_transform/{transform_id}", method: "PUT"}:                                                     "transform.put_transform",
	{path: "/_transform/{transform_id}/_preview", method: "GET"}:                                            "transform.preview_transform",
	{path: "/_transform/{transform_id}/_preview", method: "POST"}:                                           "transform.preview_transform",
	{path: "/_transform/{transform_id}/_reset", method: "POST"}:                                             "transform.reset_transform",
	{path: "/_transform/{transform_id}/_start", method: "POST"}:                                             "transform.start_transform",
	{path: "/_transform/{transform_id}/_stats", method: "GET"}:                                              "transform.get_transform_stats",
	{path: "/_transform/{transform_id}/_stop", method: "POST"}:                                              "transform.stop_transform",
	{path: "/_transform/{transform_id}/_update", method: "POST"}:                                            "transform.update_transform",
	{path: "/_update_by_query/{task_id}/_rethrottle", method: "POST"}:                                       "update_by_query_rethrottle",
	{path: "/_validate/query", method: "GET"}:                                                               "indices.validate_query",
	{path: "/_validate/query", method: "POST"}:                                                              "indices.validate_query",
	{path: "/_watcher/_query/watches", method: "GET"}:                                                       "watcher.query_watches",
	{path: "/_watcher/_query/watches", method: "POST"}:                                                      "watcher.query_watches",
	{path: "/_watcher/_start", method: "POST"}:                                                              "watcher.start",
	{path: "/_watcher/_stop", method: "POST"}:                                                               "watcher.stop",
	{path: "/_watcher/stats", method: "GET"}:                                                                "watcher.stats",
	{path: "/_watcher/stats/{metric}", method: "GET"}:                                                       "watcher.stats",
	{path: "/_watcher/watch/_execute", method: "POST"}:                                                      "watcher.execute_watch",
	{path: "/_watcher/watch/_execute", method: "PUT"}:                                                       "watcher.execute_watch",
	{path: "/_watcher/watch/{id}", method: "DELETE"}:                                                        "watcher.delete_watch",
	{path: "/_watcher/watch/{id}", method: "GET"}:                                                           "watcher.get_watch",
	{path: "/_watcher/watch/{id}", method: "POST"}:                                                          "watcher.put_watch",
	{path: "/_watcher/watch/{id}", method: "PUT"}:                                                           "watcher.put_watch",
	{path: "/_watcher/watch/{id}/_execute", method: "POST"}:                                                 "watcher.execute_watch",
	{path: "/_watcher/watch/{id}/_execute", method: "PUT"}:                                                  "watcher.execute_watch",
	{path: "/_watcher/watch/{watch_id}/_ack", method: "POST"}:                                               "watcher.ack_watch",
	{path: "/_watcher/watch/{watch_id}/_ack", method: "PUT"}:                                                "watcher.ack_watch",
	{path: "/_watcher/watch/{watch_id}/_ack/{action_id}", method: "POST"}:                                   "watcher.ack_watch",
	{path: "/_watcher/watch/{watch_id}/_ack/{action_id}", method: "PUT"}:                                    "watcher.ack_watch",
	{path: "/_watcher/watch/{watch_id}/_activate", method: "POST"}:                                          "watcher.activate_watch",
	{path: "/_watcher/watch/{watch_id}/_activate", method: "PUT"}:                                           "watcher.activate_watch",
	{path: "/_watcher/watch/{watch_id}/_deactivate", method: "POST"}:                                        "watcher.deactivate_watch",
	{path: "/_watcher/watch/{watch_id}/_deactivate", method: "PUT"}:                                         "watcher.deactivate_watch",
	{path: "/_xpack", method: "GET"}:                                                                        "xpack.info",
	{path: "/_xpack/usage", method: "GET"}:                                                                  "xpack.usage",
	{path: "/{alias}/_rollover", method: "POST"}:                                                            "indices.rollover",
	{path: "/{alias}/_rollover/{new_index}", method: "POST"}:                                                "indices.rollover",
	{path: "/{index}", method: "DELETE"}:                                                                    "indices.delete",
	{path: "/{index}", method: "GET"}:                                                                       "indices.get",
	{path: "/{index}", method: "HEAD"}:                                                                      "indices.exists",
	{path: "/{index}", method: "PUT"}:                                                                       "indices.create",
	{path: "/{index}/_alias", method: "GET"}:                                                                "indices.get_alias",
	{path: "/{index}/_alias/{name}", method: "DELETE"}:                                                      "indices.delete_alias",
	{path: "/{index}/_alias/{name}", method: "GET"}:                                                         "indices.get_alias",
	{path: "/{index}/_alias/{name}", method: "HEAD"}:                                                        "indices.exists_alias",
	{path: "/{index}/_alias/{name}", method: "POST"}:                                                        "indices.put_alias",
	{path: "/{index}/_alias/{name}", method: "PUT"}:                                                         "indices.put_alias",
	{path: "/{index}/_aliases/{name}", method: "DELETE"}:                                                    "indices.delete_alias",
	{path: "/{index}/_aliases/{name}", method: "POST"}:                                                      "indices.put_alias",
	{path: "/{index}/_aliases/{name}", method: "PUT"}:                                                       "indices.put_alias",
	{path: "/{index}/_analyze", method: "GET"}:                                                              "indices.analyze",
	{path: "/{index}/_analyze", method: "POST"}:                                                             "indices.analyze",
	{path: "/{index}/_async_search", method: "POST"}:                                                        "async_search.submit",
	{path: "/{index}/_block/{block}", method: "PUT"}:                                                        "indices.add_block",
	{path: "/{index}/_bulk", method: "POST"}:                                                                "bulk",
	{path: "/{index}/_bulk", method: "PUT"}:                                                                 "bulk",
	{path: "/{index}/_cache/clear", method: "POST"}:                                                         "indices.clear_cache",
	{path: "/{index}/_ccr/follow", method: "PUT"}:                                                           "ccr.follow",
	{path: "/{index}/_ccr/forget_follower", method: "POST"}:                                                 "ccr.forget_follower",
	{path: "/{index}/_ccr/info", method: "GET"}:                                                             "ccr.follow_info",
	{path: "/{index}/_ccr/pause_follow", method: "POST"}:                                                    "ccr.pause_follow",
	{path: "/{index}/_ccr/resume_follow", method: "POST"}:                                                   "ccr.resume_follow",
	{path: "/{index}/_ccr/stats", method: "GET"}:                                                            "ccr.follow_stats",
	{path: "/{index}/_ccr/unfollow", method: "POST"}:                                                        "ccr.unfollow",
	{path: "/{index}/_clone/{target}", method: "POST"}:                                                      "indices.clone",
	{path: "/{index}/_clone/{target}", method: "PUT"}:                                                       "indices.clone",
	{path: "/{index}/_close", method: "POST"}:                                                               "indices.close",
	{path: "/{index}/_count", method: "GET"}:                                                                "count",
	{path: "/{index}/_count", method: "POST"}:                                                               "count",
	{path: "/{index}/_create/{id}", method: "POST"}:                                                         "create",
	{path: "/{index}/_create/{id}", method: "PUT"}:                                                          "create",
	{path: "/{index}/_delete_by_query", method: "POST"}:                                                     "delete_by_query",
	{path: "/{index}/_disk_usage", method: "POST"}:                                                          "indices.disk_usage",
	{path: "/{index}/_doc", method: "POST"}:                                                                 "index",
	{path: "/{index}/_doc/{id}", method: "DELETE"}:                                                          "delete",
	{path: "/{index}/_doc/{id}", method: "GET"}:                                                             "get",
	{path: "/{index}/_doc/{id}", method: "HEAD"}:                                                            "exists",
	{path: "/{index}/_doc/{id}", method: "POST"}:                                                            "index",
	{path: "/{index}/_doc/{id}", method: "PUT"}:                                                             "index",
	{path: "/{index}/_eql/search", method: "GET"}:                                                           "eql.search",
	{path: "/{index}/_eql/search", method: "POST"}:                                                          "eql.search",
	{path: "/{index}/_explain/{id}", method: "GET"}:                                                         "explain",
	{path: "/{index}/_explain/{id}", method: "POST"}:                                                        "explain",
	{path: "/{index}/_field_caps", method: "GET"}:                                                           "field_caps",
	{path: "/{index}/_field_caps", method: "POST"}:                                                          "field_caps",
	{path: "/{index}/_field_usage_stats", method: "GET"}:                                                    "indices.field_usage_stats",
	{path: "/{index}/_fleet/_fleet_msearch", method: "GET"}:                                                 "fleet.msearch",
	{path: "/{index}/_fleet/_fleet_msearch", method: "POST"}:                                                "fleet.msearch",
	{path: "/{index}/_fleet/_fleet_search", method: "GET"}:                                                  "fleet.search",
	{path: "/{index}/_fleet/_fleet_search", method: "POST"}:                                                 "fleet.search",
	{path: "/{index}/_fleet/global_checkpoints", method: "GET"}:                                             "fleet.global_checkpoints",
	{path: "/{index}/_flush", method: "GET"}:                                                                "indices.flush",
	{path: "/{index}/_flush", method: "POST"}:                                                               "indices.flush",
	{path: "/{index}/_forcemerge", method: "POST"}:                                                          "indices.forcemerge",
	{path: "/{index}/_graph/explore", method: "GET"}:                                                        "graph.explore",
	{path: "/{index}/_graph/explore", method: "POST"}:                                                       "graph.explore",
	{path: "/{index}/_ilm/explain", method: "GET"}:                                                          "ilm.explain_lifecycle",
	{path: "/{index}/_ilm/remove", method: "POST"}:                                                          "ilm.remove_policy",
	{path: "/{index}/_ilm/retry", method: "POST"}:                                                           "ilm.retry",
	{path: "/{index}/_knn_search", method: "GET"}:                                                           "knn_search",
	{path: "/{index}/_knn_search", method: "POST"}:                                                          "knn_search",
	{path: "/{index}/_mapping", method: "GET"}:                                                              "indices.get_mapping",
	{path: "/{index}/_mapping", method: "POST"}:                                                             "indices.put_mapping",
	{path: "/{index}/_mapping", method: "PUT"}:                                                              "indices.put_mapping",
	{path: "/{index}/_mapping/field/{fields}", method: "GET"}:                                               "indices.get_field_mapping",
	{path: "/{index}/_mget", method: "GET"}:                                                                 "mget",
	{path: "/{index}/_mget", method: "POST"}:                                                                "mget",
	{path: "/{index}/_migration/deprecations", method: "GET"}:                                               "migration.deprecations",
	{path: "/{index}/_msearch", method: "GET"}:                                                              "msearch",
	{path: "/{index}/_msearch", method: "POST"}:                                                             "msearch",
	{path: "/{index}/_msearch/template", method: "GET"}:                                                     "msearch_template",
	{path: "/{index}/_msearch/template", method: "POST"}:                                                    "msearch_template",
	{path: "/{index}/_mtermvectors", method: "GET"}:                                                         "mtermvectors",
	{path: "/{index}/_mtermvectors", method: "POST"}:                                                        "mtermvectors",
	{path: "/{index}/_mvt/{field}/{zoom}/{x}/{y}", method: "GET"}:                                           "search_mvt",
	{path: "/{index}/_mvt/{field}/{zoom}/{x}/{y}", method: "POST"}:                                          "search_mvt",
	{path: "/{index}/_open", method: "POST"}:                                                                "indices.open",
	{path: "/{index}/_pit", method: "POST"}:                                                                 "open_point_in_time",
	{path: "/{index}/_rank_eval", method: "GET"}:                                                            "rank_eval",
	{path: "/{index}/_rank_eval", method: "POST"}:                                                           "rank_eval",
	{path: "/{index}/_recovery", method: "GET"}:                                                             "indices.recovery",
	{path: "/{index}/_refresh", method: "GET"}:                                                              "indices.refresh",
	{path: "/{index}/_refresh", method: "POST"}:                                                             "indices.refresh",
	{path: "/{index}/_reload_search_analyzers", method: "GET"}:                                              "indices.reload_search_analyzers",
	{path: "/{index}/_reload_search_analyzers", method: "POST"}:                                             "indices.reload_search_analyzers",
	{path: "/{index}/_rollup/data", method: "GET"}:                                                          "rollup.get_rollup_index_caps",
	{path: "/{index}/_rollup/{rollup_index}", method: "POST"}:                                               "rollup.rollup",
	{path: "/{index}/_rollup_search", method: "GET"}:                                                        "rollup.rollup_search",
	{path: "/{index}/_rollup_search", method: "POST"}:                                                       "rollup.rollup_search",
	{path: "/{index}/_search", method: "GET"}:                                                               "search",
	{path: "/{index}/_search", method: "POST"}:                                                              "search",
	{path: "/{index}/_search/template", method: "GET"}:                                                      "search_template",
	{path: "/{index}/_search/template", method: "POST"}:                                                     "search_template",
	{path: "/{index}/_search_shards", method: "GET"}:                                                        "search_shards",
	{path: "/{index}/_search_shards", method: "POST"}:                                                       "search_shards",
	{path: "/{index}/_searchable_snapshots/cache/clear", method: "POST"}:                                    "searchable_snapshots.clear_cache",
	{path: "/{index}/_searchable_snapshots/stats", method: "GET"}:                                           "searchable_snapshots.stats",
	{path: "/{index}/_segments", method: "GET"}:                                                             "indices.segments",
	{path: "/{index}/_settings", method: "GET"}:                                                             "indices.get_settings",
	{path: "/{index}/_settings", method: "PUT"}:                                                             "indices.put_settings",
	{path: "/{index}/_settings/{name}", method: "GET"}:                                                      "indices.get_settings",
	{path: "/{index}/_shard_stores", method: "GET"}:                                                         "indices.shard_stores",
	{path: "/{index}/_shrink/{target}", method: "POST"}:                                                     "indices.shrink",
	{path: "/{index}/_shrink/{target}", method: "PUT"}:                                                      "indices.shrink",
	{path: "/{index}/_source/{id}", method: "GET"}:                                                          "get_source",
	{path: "/{index}/_source/{id}", method: "HEAD"}:                                                         "exists_source",
	{path: "/{index}/_split/{target}", method: "POST"}:                                                      "indices.split",
	{path: "/{index}/_split/{target}", method: "PUT"}:                                                       "indices.split",
	{path: "/{index}/_stats", method: "GET"}:                                                                "indices.stats",
	{path: "/{index}/_stats/{metric}", method: "GET"}:                                                       "indices.stats",
	{path: "/{index}/_terms_enum", method: "GET"}:                                                           "terms_enum",
	{path: "/{index}/_terms_enum", method: "POST"}:                                                          "terms_enum",
	{path: "/{index}/_termvectors", method: "GET"}:                                                          "termvectors",
	{path: "/{index}/_termvectors", method: "POST"}:                                                         "termvectors",
	{path: "/{index}/_termvectors/{id}", method: "GET"}:                                                     "termvectors",
	{path: "/{index}/_termvectors/{id}", method: "POST"}:                                                    "termvectors",
	{path: "/{index}/_unfreeze", method: "POST"}:                                                            "indices.unfreeze",
	{path: "/{index}/_update/{id}", method: "POST"}:                                                         "update",
	{path: "/{index}/_update_by_query", method: "POST"}:                                                     "update_by_query",
	{path: "/{index}/_validate/query", method: "GET"}:                                                       "indices.validate_query",
	{path: "/{index}/_validate/query", method: "POST"}:                                                      "indices.validate_query",
}

// tokenRegexp matches parts of a path that have a token wildcard.
var tokenRegexp = regexp.MustCompile(`{[^}]+}`)

// segment returns the first segment of path from start to the next occurrence
// of the path separator and the ending index. When the final segment of the
// path is reached, the returned index is -1. This is all done without any
// allocations to the heap (something strings.Split would not accomplish).
func segment(path string, start int) (part string, end int) {
	if path == "" || start < 0 || start > len(path)-1 {
		return "", -1
	}
	idx := strings.IndexRune(path[start+1:], '/')
	if idx == -1 {
		return path[start:], -1
	}
	end = start + idx + 1
	return path[start:end], end
}

// node is a path segment in a composed trie.
type node struct {
	value    string
	children map[string]*node
	wildcard *node // Token path segment for variable values.
}

// newNode returns an initialized node pointer.
func newNode() *node {
	return &node{children: make(map[string]*node)}
}

// Insert inserts value into the trie at the given key, replacing any existing
// value if it exists.
func (root *node) Insert(key, value string) {
	n := root
	for part, i := segment(key, 0); part != ""; part, i = segment(key, i) {
		var child *node
		if tokenRegexp.MatchString(part) {
			child = n.wildcard
			if child == nil {
				child = newNode()
				n.wildcard = child
			}
		} else {
			var ok bool
			child, ok = n.children[part]
			if !ok {
				child = newNode()
				n.children[part] = child
			}
		}
		n = child
	}

	n.value = value
}

// Get returns the value stored for the given key. An empty string is returned
// if key is not found in the trie.
func (root *node) Get(key string) string {
	n := root
	for part, i := segment(key, 0); part != ""; part, i = segment(key, i) {
		if child := n.children[part]; child != nil {
			n = child
		} else if n.wildcard != nil {
			n = n.wildcard
		} else {
			// Unknown path.
			return ""
		}
	}

	return n.value
}

// build returns a trie for the all Elasticsearch API paths.
func build() *node {
	// Fix overlap of `/_node/{metric}` and `/_node/{node_id}`. The {metric}
	// value has a limited set of known values it can be. Replace the token
	// with all known values to resolve the overlap.
	const nodesMetricPath = "/_nodes/{metric}"
	expanded := []string{
		"/_nodes/aggregations",
		"/_nodes/http",
		"/_nodes/indices",
		"/_nodes/ingest",
		"/_nodes/jvm",
		"/_nodes/os",
		"/_nodes/plugins",
		"/_nodes/process",
		"/_nodes/settings",
		"/_nodes/thread_pool",
		"/_nodes/transport",
		"/_nodes/_all",
		"/_nodes/_none",
	}
	i := sort.SearchStrings(paths, nodesMetricPath)
	fixed := make([]string, len(paths)+len(expanded)-1)
	copy(fixed[:i], paths[:i])
	copy(fixed[i:i+len(expanded)], expanded)
	copy(fixed[i+len(expanded):], paths[i+1:])

	root := newNode()
	for _, path := range fixed {
		root.Insert(path, path)
	}

	// Update all the expanded `/_node/{metric}` values to include the token.
	for _, s := range expanded {
		root.Insert(s, nodesMetricPath)
	}

	return root
}

// elasticsearchPathTrie is a trie for all Elasticsearch API paths.
var elasticsearchPathTrie = build()

// tokenize returns the tokenized form of path if it is known, otherwise an
// empty string is returned.
func tokenize(path string) string {
	return elasticsearchPathTrie.Get(path)
}
