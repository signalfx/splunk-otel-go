# Copyright Splunk Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: test
on:
  push:
    branches:
      - main
  pull_request:
env:
  # Default minimum version of Go to support.
  DEFAULT_GO_VERSION: 1.14
jobs:
  test-race:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2.1.3
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}
    - uses: actions/checkout@v2
    - uses: actions/cache@v2.1.5
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./go.sum') }}
    - name: Run tests with race detector
      run: make test-race
    - name: Check clean repository
      run: make diff

  test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2.1.3
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}
    - uses: actions/checkout@v2
    - name: Module cache
      uses: actions/cache@v2.1.5
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./go.sum') }}
    - name: Run coverage tests
      run: make test-coverage
    - uses: actions/upload-artifact@v2
      with:
          name: splunk-otel-go-test-results
          path: ./test-results

  compatibility-test:
    strategy:
      matrix:
        go-version: [1.16, 1.15, 1.14]
        os: [ubuntu-latest, macos-latest, windows-latest]
        # GitHub Actions does not support arm* architectures on default
        # runners. It is possible to acomplish this with a self-hosted runner
        # if we want to add this in the future:
        # https://docs.github.com/en/actions/hosting-your-own-runners/using-self-hosted-runners-in-a-workflow
        arch: ["386", amd64]
        exclude:
        # Not a supported Go OS/architecture.
        - os: macos-latest
          arch: "386"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v2.1.3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v2
    - uses: actions/cache@v2.1.5
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./go.sum') }}
    - name: Run tests
      env:
        GOARCH: ${{ matrix.arch }}
      run: make test-short
    - name: Check clean repository
      run: make diff
