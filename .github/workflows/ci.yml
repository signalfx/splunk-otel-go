name: ci

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  check-links:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
      - uses: lycheeverse/lychee-action@v1.10.0
        id: lychee
        with:
          args: >-
            -v -n "*.md" "**/*.md"
            --exclude "https://ingest.us0.signalfx.com.*"
            --exclude "http://localhost*"
      - name: fail for link errors
        run: exit ${{ steps.lychee.outputs.exit_code }}
  goyek:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            run-script: ./goyek.sh -v ci
          - os: windows-2022
            run-script: .\goyek.ps1 -v -skip-docker ci
          - os: macos-11
            run-script: ./goyek.sh -v -skip-docker ci
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.22'
          check-latest: true
      - run: ${{ matrix.run-script }}
      - uses: codecov/codecov-action@v4.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./coverage.out
          flags: ${{ runner.os }}

  compatibility-test:
    strategy:
      matrix:
        go-version:
        - '1.21'
        - '1.22'
        os: [ubuntu-20.04, windows-2022, macos-11]
        # GitHub Actions does not support arm* architectures on default
        # runners. It is possible to accomplish this with a self-hosted runner
        # if we want to add this in the future:
        # https://docs.github.com/en/actions/hosting-your-own-runners/using-self-hosted-runners-in-a-workflow
        arch: ["386", amd64]
        exclude:
        # Not a supported Go OS/architecture.
        - os: macos-11
          arch: "386"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4.1.5
    - uses: actions/setup-go@v5.0.1
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true
    - run: make test-short
      env:
        GOARCH: ${{ matrix.arch }}
